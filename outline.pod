=head1 NAME

Outline - what to explain in which chapter

=head1 DESCRIPTION

we need some kind of plan where we want to put what. Here's a very rough plan,
feel free to adapt and improve.

=head1 STRUCTURE

=head2 Chapter 1 - Introduction

In this book we aim to teach you everything that's necessary for you to write programs with Perl6

=head3 Chapter 1.1 - Lexical conventions

=head3 Chapter 1.2 - Literals

=head3 Chapter 1.3 - Variables

=head3 Chapter 1.4 - Scalars

=head3 Chapter 1.5 - Arrays

=head3 Chapter 1.6 - Hashes

=head3 Chapter 1.7 - Basic operators

=head3 Chapter 1.8 - Methods and function calls

=head3 Chapter 1.9 - Control flow

(Add more basics here if you need them in later chapters).

(How can we make that chapter non-boring? keeping it short?)

TODO: more about arrays, hashes, built-in functions and methods, operators,
list quoting

=head2 Chapter 2 - Operators

=head3 Chapter 2.1 - Meta operators

Done: Operators

TODO: list some common operators. Meta-operators

=head2 Chapter 3.0 - Subs and signatures
   
=head2 Chapter 4.0 - Multis

=head3 Chapter 4.1 - Typed based multi dispatch

=head3 Chapter 4.2 - Narrowness

=head3 Chapter 4.3 - Constraints

=head3 Chapter 4.4 - Multiple arguments

=head2 Chapter 5 - Objects and classes

=head3 Chapter 5.1 - Classes

=head3 Chapter 5.2 - Attributes

=head3 Chapter 5.3 - Methods

=head3 Chapter 5.4 - Construction

TODO:

inheritance, BUILD submethods

=head2 Chapter 6 - Regexes 

=head3 Chapter 6.1 - Literals

=head3 Chapter 6.2 - Quantifiers

=head3 Chapter 6.3 - Captures

=head3 Chapter 6.4 - Anchors

=head3 Chapter 6.5 - Look-arounds

=head3 Chapter 6.6 - Backtracking control

=head3 Chapter 6.7 - Match objects

TODO:

??

=head2 Chapter 7 - Grammars

=head3 Chapter 7.1 - Subrules

=head3 Chapter 7.2 - Recursion

=head3 Chapter 7.3 - Inheritance

=head3 Chapter 7.4 - Reduction methods

TODO: detailed explanation of the JSON reduction methods

=head2 Chapter 8 - Roles

=head1 Conjectural: chapter ideas

Other suggestions:

    database interface
    web programming
    extending the language (traits, meta-programming)
